{"version":3,"file":"./assets/js/dist/mpp-core.js","mappings":"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","sources":["webpack://mediapress/./assets/js/mpp-core.js","webpack://mediapress/./assets/js/src/globals.js","webpack://mediapress/./assets/js/src/utils/lightbox-utils.js","webpack://mediapress/./assets/js/src/utils/media-player-utils.js","webpack://mediapress/./assets/js/src/utils/notice.js","webpack://mediapress/external window \"jQuery\"","webpack://mediapress/external window [\"wp\",\"hooks\"]","webpack://mediapress/webpack/bootstrap","webpack://mediapress/webpack/runtime/compat get default export","webpack://mediapress/webpack/runtime/define property getters","webpack://mediapress/webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["import jQuery from 'jquery';\n\nimport \"./src/globals\";\n\n(function ($) {\n\n    $(document).ready(function () {\n        // Lightbox Code\n        let isLightBoxLoaded = mpp.lightbox.isLoaded();\n        // Lightbox popup for activity.\n        if (isLightBoxLoaded && _mppSettings.enable_activity_lightbox) {\n\n            $(document).on('click.mpp:activity:lightbox.mpp:lightbox', '.mpp-activity-media-list a.mpp-activity-media, .mpp-activity-media-list a.mpp-activity-item-title', function () {\n\n                let $this = $(this);\n                if ($this.hasClass('mpp-no-lightbox')) {\n                    return;\n                }\n\n                if (!mpp.lightbox.supportsMediaType($this.data('mpp-type'))) {\n                    return;\n                }\n\n                let $parent = $this.parents('.mpp-activity-item-content'),\n                    activity_id = $this.data('mpp-activity-id'),\n                    position = 0,\n                    media_id,\n                    url;\n\n                if ($parent.length) {\n                    position = $this.parents('.mpp-container').find('.mpp-activity-item-content').index($parent);\n                    // newer template\n                    // or non photo media\n                } else if (!activity_id && $this.find('img.mpp-attached-media-item').length) {\n                    activity_id = $this.find('img.mpp-attached-media-item').data('mpp-activity-id');\n                }\n\n                url = $this.attr('href');\n                if (!activity_id) {\n                    return true;\n                }\n                media_id = $this.data('mpp-media-id');\n                //open lightbox\n                mpp.lightbox.activity(activity_id, position, url, media_id);\n\n                return false;\n            });\n\n            //for comment\n            $(document).on('click.mpp:activity:comment:lightbox.mpp:lightbox', '.mpp-activity-comment-media-list a', function () {\n\n                let $this = $(this);\n                if ($this.hasClass('mpp-no-lightbox')) {\n                    return;\n                }\n\n                if (!mpp.lightbox.supportsMediaType($this.data('mpp-type'))) {\n                    return;\n                }\n\n                let media_id = $this.data('mpp-media-id'),\n                    position = 0,\n                    url = $this.attr('href');\n\n                if (!media_id) {\n                    return true;\n                }\n                //open lightbox\n                mpp.lightbox.media(media_id, position, url);\n\n                return false;\n            });\n\n\n        } //end of activity lightbox\n\n        // For Gallery(when a gallery cover is clicked )\n        if (isLightBoxLoaded && _mppSettings.enable_gallery_lightbox) {\n\n            $(document).on('click.mpp:gallery:cover:lightbox.mpp:lightbox', '.mpp-gallery a.mpp-gallery-cover', function () {\n\n                let $this = $(this);\n                if ($this.hasClass('mpp-no-lightbox')) {\n                    return;\n                }\n\n                if (!mpp.lightbox.supportsMediaType($this.data('mpp-type'))) {\n                    return;\n                }\n\n                let gallery_id = $this.data('mpp-gallery-id'),\n                    position = 0,// open first media\n                    url = $this.attr('href');\n\n                if (!gallery_id) {\n                    return true;\n                }\n                //open lightbox\n                mpp.lightbox.gallery(gallery_id, position, url);\n\n                return false;\n            });\n\n\n        }\n        //for shortcodes, when a media(photo) is clicked\n        if (isLightBoxLoaded) {\n            $(document).on('click.mpp:shortcode:lightbox.mpp:lightbox', '.mpp-shortcode-lightbox-enabled a.mpp-media-thumbnail, .mpp-shortcode-lightbox-enabled a.mpp-media-title', function () {\n                let $container = $($(this).parents('.mpp-shortcode-lightbox-enabled').get(0));\n                if (!$container.get(0)) {\n                    return;\n                }\n\n                var $this = $(this);\n                if ($this.hasClass('mpp-no-lightbox')) {\n                    return;\n                }\n\n                if (!mpp.lightbox.supportsMediaType($this.data('mpp-type'))) {\n                    return;\n                }\n\n                let media_ids = $container.data('media-ids'),\n                    url = $this.attr('href'),\n                    position = 0,// $( 'a.mpp-media-thumbnail', $container) .index( $this );\n                    media_id = $this.data('mpp-media-id');\n\n                mpp.lightbox.media(media_ids, position, url, media_id);\n                return false;\n\n            });\n\n        } //end of lightbox for the shortcode\n\n        // enable lightbox for click on the photo inside gallery\n\n\n        // For Gallery(when a gallery cover is clicked )\n        if (isLightBoxLoaded && _mppSettings.enable_lightbox_in_gallery_media_list) {\n\n            $(document).on('click.mpp:gallery:media:lightbox.mpp:lightbox', '.mpp-single-gallery-media-list a.mpp-photo-thumbnail, .mpp-single-gallery-media-list a.mpp-media-title', function () {\n\n                let $this = $(this);\n\n                if ($this.hasClass('mpp-no-lightbox')) {\n                    return;\n                }\n\n                if (!mpp.lightbox.supportsMediaType($this.data('mpp-type'))) {\n                    return;\n                }\n\n                let gallery_id = $this.parents('.mpp-single-gallery-media-list').data('gallery-id'),\n                    position = 0,//open first media\n                    url = $this.attr('href'),\n                    media_id = $this.data('mpp-media-id');\n\n                if (!gallery_id || !media_id) {\n                    return true;\n                }\n\n                //open lightbox\n                mpp.lightbox.gallery(gallery_id, position, url, media_id);\n\n                return false;\n            });\n        }\n\n        // Create trigger to open lightbox on any link that have the class 'mpp-lightbox-link' and context\n        if (isLightBoxLoaded) {\n            $(document).on('click.mpp:link:lightbox.mpp:lightbox', '.mpp-lightbox-link', function () {\n\n                var $this = $(this);\n\n                if ($this.hasClass('mpp-no-lightbox')) {\n                    return;\n                }\n\n                if (!mpp.lightbox.supportsMediaType($this.data('mpp-type'))) {\n                    return;\n                }\n\n                let activity_id = $this.data('activity-id'),\n                    gallery_id = $this.data('gallery-id'),\n                    media_id = $this.data('media-id'),\n                    url = $this.attr('href'),\n                    lightbox_opened = false,\n                    position = $this.data('position');\n\n                if (!position) {\n                    position = 0;\n                } else {\n                    position = position - 1;\n                }\n\n                if (gallery_id) {\n                    // open lightbox\n                    mpp.lightbox.gallery(gallery_id, position, url);\n                    lightbox_opened = true;\n                } else if (media_id) {\n                    mpp.lightbox.media(media_id, position, url);\n                    lightbox_opened = true;\n                } else if (activity_id) {\n                    mpp.lightbox.activity(activity_id, position, url);\n                    lightbox_opened = true;\n                }\n\n                if (lightbox_opened) {\n                    return false;\n                }\n\n            });\n        }\n    });\n\n})(jQuery);\n","import { createHooks } from '@wordpress/hooks';\n// Make mpp global object.\nimport {mpp_mejs_activate_lightbox_player, mpp_mejs_activate} from \"./utils/media-player-utils\";\nimport lightbox from './utils/lightbox-utils';\nimport {notify, clearNotice} from './utils/notice';\n\nlet mpp = window.mpp || {};\n\nmpp.hooks = createHooks();\n\nmpp.lightbox = lightbox;\n\n//allow plugins/theme to override the notification\nif (mpp.notify === undefined) {\n    mpp.notify = notify;\n    mpp.clearNotice = clearNotice;\n}\nwindow.mpp = mpp;\n\nwindow.mpp_mejs_activate = mpp_mejs_activate;\nwindow.mpp_mejs_activate_lightbox_player = mpp_mejs_activate_lightbox_player;\n\n","//Lightbox utility API.\n\nimport $ from 'jquery';\n\nexport default {\n    /**\n     * Open Lightbox with the Media Collection.\n     *\n     * @param {array} items array of media items\n     * @param {int} position numeric position of the media to be shown by default\n     * @param {string} fallback_url open this url on error.\n     */\n    open: function (items, position, fallback_url) {\n        if (items.length < 1) {\n            window.location = fallback_url;\n            return;\n        }\n\n        $.magnificPopup.open({\n                items: items,\n                type: 'inline',\n                closeBtnInside: false,\n                preload: [1, 3],\n                closeOnBgClick: true,\n                showCloseBtn: true,\n                closeMarkup: '<button title=\"%title%\" type=\"button\" class=\"mfp-close mpp-lightbox-close-btn\">&#215;</button>',\n                gallery: {\n                    enabled: true,\n                    navigateByImgClick: true,\n                    //arrowMarkup: '',// disabled default arrows\n                    preload: [0, 1] // Will preload 0 - before current, and 1 after the current image\n                }\n            },\n            position\n        );\n\n        // new api.\n        $(document).trigger('mpp:lightbox:opened', [items, position] );\n\n        // backaward compatibility.\n        $(document).trigger('mpp_lightbox_opened');\n    }, //open lightbox\n\n    /**\n     * Update the lightbox content with given html.\n     *\n     * @param {string} content content.\n     *\n     * @returns {boolean}\n     */\n    update: function (content) {\n        if (!mpp.lightbox.isLoaded()) {\n            return false;\n        }\n        var magnificPopup = $.magnificPopup.instance;\n        magnificPopup.currItem.src = content;\n        magnificPopup.items[magnificPopup.index] = magnificPopup.currItem;\n        magnificPopup.updateItemHTML();\n    }, // update current open box with the content.\n\n    gallery: function (gallery_id, position, url, media_id) {\n        var $lightbox = this;\n        //get the details from server.\n        $.post(ajaxurl, {\n                action: 'mpp_fetch_gallery_media',\n                gallery_id: gallery_id,\n                cookie: encodeURIComponent(document.cookie)\n            },\n            function (response) {\n                if (response.items === undefined) {\n                    return;//should we notify too?\n                }\n\n                var items = response.items;\n                // If media ID is given\n                if (typeof media_id !== 'undefined') {\n                    position = get_media_position_in_collection(media_id, items);\n                }\n                $lightbox.open(items, position, url);\n\n            }, 'json');\n    },\n\n    /**\n     * Open one or more media(photo) in lightbox\n     *\n     * @param {string} media_ids comma separated list of media ids\n     * @param {integer} position which media to display as first\n     * @param {string} url fallback url to open if lightbox is unable to open\n     */\n    media: function (media_ids, position, url, media_id) {\n        var $lightbox = this;\n        jQuery.post(ajaxurl, {\n                action: 'mpp_lightbox_fetch_media',\n                media_ids: media_ids,\n                cookie: encodeURIComponent(document.cookie)\n            },\n            function (response) {\n                if (response.items === undefined) {\n                    return;//should we notify too?\n                }\n\n                var items = response.items;\n                // If media ID is given\n                if (typeof media_id !== 'undefined') {\n                    position = get_media_position_in_collection(media_id, items);\n                }\n                $lightbox.open(items, position, url);\n\n            }, 'json');\n    },\n\n    activity: function (activity_id, position, url, media_id) {\n        //get the details from server\n        var $lightbox = this;\n\n        jQuery.post(ajaxurl, {\n                action: 'mpp_fetch_activity_media',\n                activity_id: activity_id,\n                cookie: encodeURIComponent(document.cookie)\n            },\n            function (response) {\n                if (response.items === undefined) {\n                    return;//should we notify too?\n                }\n\n                var items = response.items;\n                // If media ID is given\n                if (typeof media_id !== 'undefined') {\n                    position = get_media_position_in_collection(media_id, items);\n                }\n\n                $lightbox.open(items, position, url);\n\n            }, 'json');\n    }, //open for activity\n\n    /**\n     * Reload given media id.\n     *\n     * @param media_id\n     */\n    reloadMedia: function (media_id) {\n        var $lightbox = this;\n        jq.post(ajaxurl, {action: 'mpp_reload_lightbox_media', 'media_id': media_id}, function (response) {\n            if (response.success) {\n                // success\n                $lightbox.update(response.data.content);\n            } else {\n                // Failed.\n            }\n        });\n    },\n\n    /**\n     * Reload the current lightbox media. It acts as refresh.\n     *\n     * @returns {boolean}\n     */\n    reloadCurrentMedia: function () {\n        var media_id = this.getCurrentMediaID();\n        if (media_id) {\n            this.reloadMedia(media_id);\n            return true;\n        }\n        return false;\n    },\n\n    /**\n     * Get Current Media Opened in the lightbox.\n     *\n     * returns 0 for invalid call.\n     *\n     * @returns {int}\n     */\n    getCurrentMediaID: function () {\n        if (!this.isLoaded() || !this.isOpen()) {\n            return 0;\n        }\n\n        var magnificPopup = jQuery.magnificPopup.instance;\n        var data = magnificPopup.currItem.data;\n        if (typeof data.id !== 'undefined') {\n            return data.id;\n        }\n\n        return 0;\n    },\n\n    /**\n     * Is Lightbox Loaded?\n     *\n     * @returns {boolean}\n     */\n    isLoaded: function () {\n        return jQuery.fn.magnificPopup !== undefined;\n    },\n\n    /**\n     * Is lightbox Open?\n     *\n     * @returns {boolean}\n     */\n    isOpen: function () {\n        return jQuery.magnificPopup.instance.isOpen === true;\n    },\n    // backward compatibility\n    is_lightbox_loaded: function () {\n        return this.isLoaded();\n    },\n    /**\n     * Check if lightbox supports given type.\n     *\n     * @param type\n     * @returns {Boolean}\n     */\n    supportsMediaType: function (type) {\n        // type unknown, or nothing is disabled or type is enabled.\n        return !type || !_mppSettings.lightboxDisabledTypes || !_mppSettings.lightboxDisabledTypes[type];\n    }\n};\n\n/**\n * Find position of the item in the given collection.\n *\n * @param media_id\n * @param items\n * @returns {number}\n */\nfunction get_media_position_in_collection(media_id, items) {\n    var index = 0;\n    var position = 0;\n    // calculate the position of this media in the collection\n    for (var i in items) {\n        if (items[i].id == media_id) {\n            position = index;\n        }\n        index++;\n    }\n\n    return position;\n}","import $ from 'jquery';\n/**\n * Activate audi/video player(MediElelement.js player)\n *\n * @param {type} activity_id\n * @returns {undefined}\n */\nfunction mpp_mejs_activate(activity_id) {\n\n    //when document is loading, mediaelementplayer will be undefined, a workaround to avoid double activating it\n    if ($.fn.mediaelementplayer === undefined) {\n        return;\n    }\n\n    let settings = {};\n\n    if (typeof _wpmejsSettings !== 'undefined') {\n        settings = _wpmejsSettings;\n    }\n\n    settings.success = function (mejs) {\n        let autoplay, loop;\n\n        if ('flash' === mejs.pluginType) {\n            autoplay = mejs.attributes.autoplay && 'false' !== mejs.attributes.autoplay;\n            loop = mejs.attributes.loop && 'false' !== mejs.attributes.loop;\n\n            if (autoplay) {\n                mejs.addEventListener('canplay', function () {\n                    mejs.play();\n                }, false);\n            }\n\n            if (loop) {\n                mejs.addEventListener('ended', function () {\n                    mejs.play();\n                }, false);\n            }\n        }\n    };\n\n    $('.wp-audio-shortcode, .wp-video-shortcode', $('#activity-' + activity_id)).mediaelementplayer(settings);\n\n    $('.wp-playlist', $('#activity-' + activity_id)).each(function () {\n        return new WPPlaylistView({el: this});\n    });\n}\n\n/**\n * Activate audio/video player(MediElelement.js player) in the lightbox.\n *\n * @returns {undefined}\n */\nfunction mpp_mejs_activate_lightbox_player() {\n\n    //when document is loading, mediaelementplayer will be undefined, a workaround to avoid double activating it\n    if ($.fn.mediaelementplayer === undefined) {\n        return;\n    }\n\n    let settings = {};\n\n    if (typeof _wpmejsSettings !== 'undefined') {\n        settings = _wpmejsSettings;\n    }\n\n    settings.success = function (mejs) {\n        let autoplay, loop;\n\n        if ('flash' === mejs.pluginType) {\n            autoplay = mejs.attributes.autoplay && 'false' !== mejs.attributes.autoplay;\n            loop = mejs.attributes.loop && 'false' !== mejs.attributes.loop;\n\n            if (autoplay) {\n                mejs.addEventListener('canplay', function () {\n                    mejs.play();\n                }, false);\n            }\n\n            if (loop) {\n                mejs.addEventListener('ended', function () {\n                    mejs.play();\n                }, false);\n            }\n        }\n    };\n\n    $('.wp-audio-shortcode, .wp-video-shortcode', $('.mfp-content')).mediaelementplayer(settings);\n\n    $('.wp-playlist', $('.mfp-content')).each(function () {\n        return new WPPlaylistView({el: this});\n    });\n\n}\n\nexport {mpp_mejs_activate_lightbox_player, mpp_mejs_activate};\n","\nimport $ from 'jquery';\n\nfunction notify(message, error) {\n\n    var class_name = 'updated success';\n    if (error !== undefined) {\n        class_name = 'error';\n    }\n\n    $('#mpp-notice-message').remove();// will it have side effects?\n    var selectors = ['#mpp-container', '#whats-new-form', '.mpp-upload-shortcode']; //possible containers in preferred order\n    var container_selector = '';//default\n\n    for (var i = 0; i < selectors.length; i++) {\n        if ($(selectors[i]).get(0)) {\n            container_selector = selectors[i];\n            break;\n        }\n    }\n\n    //if container exists, let us append the message\n    if (container_selector) {\n        $(container_selector).prepend('<div id=\"mpp-notice-message\" class=\"mpp-notice mpp-template-notice ' + class_name + '\"><p>' + message + '</p></div>').show();\n    }\n}\n\nfunction clearNotice() {\n    $('#mpp-notice-message').remove();\n}\nexport {notify, clearNotice};\n","module.exports = window[\"jQuery\"];","module.exports = window[\"wp\"][\"hooks\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }"],"names":["$","mpp","window","hooks","createHooks","lightbox","undefined","notify","clearNotice","mpp_mejs_activate","mpp_mejs_activate_lightbox_player","get_media_position_in_collection","media_id","items","index","position","i","id","open","fallback_url","length","location","type","closeBtnInside","preload","closeOnBgClick","showCloseBtn","closeMarkup","gallery","enabled","navigateByImgClick","document","trigger","update","content","isLoaded","magnificPopup","currItem","src","updateItemHTML","gallery_id","url","$lightbox","this","ajaxurl","action","cookie","encodeURIComponent","response","media","media_ids","jQuery","post","activity","activity_id","reloadMedia","jq","success","data","reloadCurrentMedia","getCurrentMediaID","isOpen","instance","fn","is_lightbox_loaded","supportsMediaType","_mppSettings","lightboxDisabledTypes","settings","_wpmejsSettings","mejs","autoplay","loop","pluginType","attributes","addEventListener","play","mediaelementplayer","each","WPPlaylistView","el","message","error","class_name","remove","selectors","container_selector","get","prepend","show","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","ready","isLightBoxLoaded","enable_activity_lightbox","on","$this","hasClass","$parent","parents","find","attr","enable_gallery_lightbox","$container","enable_lightbox_in_gallery_media_list","lightbox_opened"],"sourceRoot":""}