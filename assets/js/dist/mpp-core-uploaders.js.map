{"version":3,"file":"./assets/js/dist/mpp-core-uploaders.js","mappings":"oDAAAA,EAAOC,QAAUC,OAAe,Q,gBCAhCF,EAAOC,QAAUC,OAAY,MCCzBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,QCpBfG,EAAoBK,EAAI,SAAST,GAChC,IAAIU,EAASV,GAAUA,EAAOW,WAC7B,WAAa,OAAOX,EAAgB,SACpC,WAAa,OAAOA,GAErB,OADAI,EAAoBQ,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRN,EAAoBQ,EAAI,SAASX,EAASa,GACzC,IAAI,IAAIC,KAAOD,EACXV,EAAoBY,EAAEF,EAAYC,KAASX,EAAoBY,EAAEf,EAASc,IAC5EE,OAAOC,eAAejB,EAASc,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EX,EAAoBY,EAAI,SAASK,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,yBCK/F,SAAWI,GAEP,MAAMC,EAAiBC,EAAEC,MAAMC,oBACzBC,EAAwBH,EAAEC,MAAMG,0BACtCN,EAAEO,UAAUC,OAAM,WACd,MAAMC,EAAQC,IAAIC,WAKlB,IAAIC,EAAUX,EAAeY,OAAOD,QAChCE,EAAa,EAEbd,EAAE,gBAAgBe,SAClBH,EAAUZ,EAAE,gBAAgBgB,OAG5BhB,EAAE,0BAA0Be,SAC5BD,EAAad,EAAE,0BAA0BgB,OAG7C,IAAIC,EAAaR,EAAMS,cAAcjB,EAAekB,cAGhDC,EAAW,IAAIV,IAAIW,SAAS,UAAW,CACvCC,GAAI,+BACJC,IAAKtB,EAAesB,IACpBC,KAAMnB,EACNQ,OAAQX,EAAEuB,OAAO,GAAIxB,EAAeY,OAAQ,CAAC,QAAWD,EAAS,WAAcE,IAC/EY,iBAAkBjB,EAAMkB,kBAAkBV,GAC1CW,gBAAgB,IAIpBR,EAASS,OAETpB,EAAMqB,uBAAuBV,EAAUnB,EAAekB,cAItD,IAAIY,EAAuB,EAAGC,EAAsB,KAEhDhC,EAAE,0DAA0De,SAC5DgB,EAAuB/B,EAAE,0DAA0DgB,OAEnFhB,EAAE,mDAAmDe,SACrDiB,EAAsBvB,EAAMS,cAAclB,EAAE,mDAAmDiC,QAAQjB,QAG3G,IAAIkB,EAAoB,IAAIxB,IAAIW,SAAS,YAAa,CAClDC,GAAI,iCACJC,IAAKtB,EAAesB,IACpBC,KAAMnB,EACNQ,OAAQX,EAAEuB,OAAO,GAAIxB,EAAeY,OAAQ,CAAC,QAAW,YAAa,WAAckB,IACnFL,iBAAkBM,EAClBJ,gBAAgB,IAWpB,GARAM,EAAkBL,OAEbE,GACDG,EAAkBC,UAEtBD,EAAkBE,mBAGdpC,EAAE,kCAAkCe,OAAQ,CAE5C,IAAIsB,EAAQrC,EAAE,kCAAkCsC,QAAQ,yBAAyBC,KAAK,6BAClFF,EAAMtB,SACNN,EAAMqB,uBAAuBI,EAAmBG,EAAMrB,OACtDkB,EAAkBM,WAM1BxC,EAAE,0DAA0DyC,GAAG,UAAU,WACrE,IAAIC,EAAQ1C,EAAE2C,MACVC,EAAUF,EAAMH,KAAK,mBAErBG,EAAM1B,QACc,MAAhB0B,EAAM1B,MACNkB,EAAkBW,SAElBX,EAAkBC,WAK1BD,EAAkBY,SAAS,aAAcJ,EAAM1B,OAC/CP,EAAMqB,uBAAuBI,EAAmBU,EAAQG,KAAK,aAC7Db,EAAkBM,aAItB,IAAIQ,EAAiBhD,EAAE,uBAAuBiC,QAC1CgB,EAA2BjD,EAAE,wBAE7BkD,EAAYF,EAAeT,KAAK,mBAAmBvB,MACnDmC,EAAWH,EAAeT,KAAK,kBAAkBvB,MACjDoC,EAAaJ,EAAeT,KAAK,oBAAoBvB,MAGrC,IAAIN,IAAIW,SAAS,iBAAkB,CACnDC,GAAI,sBACJ+B,UAAW,oBACX9B,IAAKtB,EAAesB,IACpBC,KAAMnB,EACNQ,OAAQX,EAAEuB,OAAO,GAAIxB,EAAeY,OAAQ,CACxC,QAAW,QACX,OAAU,mBACV,gBAAiBsC,EACjB,iBAAkBD,EAClB,kBAAmBE,IAGvB1B,iBAAkBjB,EAAMkB,kBAAkBlB,EAAMS,cAAc,UAC9DU,gBAAgB,EAChB0B,UAAW,SAAUC,GACjBN,EAAyBO,QAK7BC,UAAW,SAAUF,EAAMG,KAI3BC,eAAgB,SAAUJ,EAAMK,EAAUC,KAG1CC,MAAO,WACHpD,IAAIqD,OAAO,UAEfC,OAAQ,CACJC,QAAS,SAAUV,EAAMW,GAErB,IAAI3C,GADJ2C,EAAWA,EAASnB,MACDoB,OAASD,EAASC,MAAMV,UAAYS,EAASC,MAAMV,UAAUlC,IAAM,KAClFA,GACAyB,EAAeT,KAAK,oBAAoB6B,KAAK,MAAO7C,IAI5D8C,SAAU,WAENpB,EAAyBqB,WAKvBzC,OAGd7B,EAAEO,UAAUkC,GAAG,QAAS,qBAAqB,WACzC,OAAO,QA3JnB,CA8JG8B,K","sources":["webpack://mediapress/external window \"jQuery\"","webpack://mediapress/external window \"mpp\"","webpack://mediapress/webpack/bootstrap","webpack://mediapress/webpack/runtime/compat get default export","webpack://mediapress/webpack/runtime/define property getters","webpack://mediapress/webpack/runtime/hasOwnProperty shorthand","webpack://mediapress/./assets/js/mpp-core-uploaders.js"],"sourcesContent":["module.exports = window[\"jQuery\"];","module.exports = window[\"mpp\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","/* global window */\n\nimport jQuery from 'jquery';\nimport \"./mpp-uploader\";\n\n(function ($) {\n    // private copy to avoid user modifications.\n    const uploadSettings = _.clone(_mppUploadSettings),\n          uploadFeedbackStrings = _.clone(_mppUploaderFeedbackL10n );\n    $(document).ready(function () {\n        const utils = mpp.mediaUtils;\n\n        ///1.\n        // single gallery uploader setup.\n        // context defines from where it was uploaded\n        let context = uploadSettings.params.context,\n            gallery_id = 0;\n\n        if ($('#mpp-context').length) {\n            context = $('#mpp-context').val();\n        }\n\n        if ($('#mpp-upload-gallery-id').length) {\n            gallery_id = $('#mpp-upload-gallery-id').val();\n        }\n\n        let extensions = utils.getExtensions(uploadSettings.current_type);\n\n        // single gallery uploader\n        let uploader = new mpp.Uploader('gallery', {\n            el: '#mpp-upload-dropzone-gallery',\n            url: uploadSettings.url,\n            l10n: uploadFeedbackStrings,\n            params: _.extend({}, uploadSettings.params, {'context': context, 'gallery_id': gallery_id}),\n            allowedFileTypes: utils.prepareExtensions(extensions),\n            addRemoveLinks: true,\n        });\n\n        // initialize.\n        uploader.init();\n        // to make sure file type notices are shown. we can handle it in better way in future.\n        utils.setupUploaderFileTypes(uploader, uploadSettings.current_type);\n\n        /// 2.\n        // shortcode uploader setup.\n        let shortcode_gallery_id = 0, shortcodeExtensions = null;\n\n        if ($('.mpp-upload-shortcode #mpp-shortcode-upload-gallery-id').length) {\n            shortcode_gallery_id = $('.mpp-upload-shortcode #mpp-shortcode-upload-gallery-id').val();\n        }\n        if ($('.mpp-upload-shortcode .mpp-uploading-media-type').length) {\n            shortcodeExtensions = utils.getExtensions($('.mpp-upload-shortcode .mpp-uploading-media-type').first().val());\n        }\n\n        let shortcodeUploader = new mpp.Uploader('shortcode', {\n            el: '#mpp-upload-dropzone-shortcode',\n            url: uploadSettings.url,\n            l10n: uploadFeedbackStrings,\n            params: _.extend({}, uploadSettings.params, {'context': 'shortcode', 'gallery_id': shortcode_gallery_id}),\n            allowedFileTypes: shortcodeExtensions,\n            addRemoveLinks: true,\n        });\n        // initialize.\n        shortcodeUploader.init();\n\n        if (!shortcode_gallery_id) {\n            shortcodeUploader.disable();\n        }\n        shortcodeUploader.hideHelpMessages();\n\n        //apply these only when the dropzone exists\n        if ($('#mpp-upload-dropzone-shortcode').length) {\n\n            var $type = $('#mpp-upload-dropzone-shortcode').parents('.mpp-upload-shortcode').find('.mpp-uploading-media-type');\n            if ($type.length) {\n                utils.setupUploaderFileTypes(shortcodeUploader, $type.val());\n                shortcodeUploader.refresh();\n            }\n        }\n\n        //on gallery selection change, we need to update the the media type too\n\n        $('.mpp-upload-shortcode #mpp-shortcode-upload-gallery-id').on('change', function () {\n            let $this = $(this),\n                $option = $this.find(\"option:selected\");\n\n            if ($this.val()) {\n                if ($this.val() !== '0') {\n                    shortcodeUploader.enable();\n                } else {\n                    shortcodeUploader.disable();\n                    // @todo we should disable and show feed back too?\n                }\n            }\n\n            shortcodeUploader.setParam('gallery_id', $this.val());\n            utils.setupUploaderFileTypes(shortcodeUploader, $option.data('mpp-type'));\n            shortcodeUploader.refresh();\n        });\n        //For cover uploader\n\n        let $editableCover = $('.mpp-editable-cover').first(),\n            $coverUploadingIndicator = $('#mpp-cover-uploading'),\n            oldCoverURL = '';\n        let galleryID = $editableCover.find('.mpp-gallery-id').val(),\n            parentID = $editableCover.find('.mpp-parent-id').val(),\n            parentType = $editableCover.find('.mpp-parent-type').val();\n\n        // single gallery /media cover uploader\n        let coverUploader = new mpp.Uploader('cover_uploader', {\n            el: '.mpp-editable-cover',\n            clickable: '#mpp-cover-upload',\n            url: uploadSettings.url,\n            l10n: uploadFeedbackStrings,\n            params: _.extend({}, uploadSettings.params, {\n                'context': 'cover',\n                'action': 'mpp_upload_cover',\n                'mpp-parent-id': parentID,\n                'mpp-gallery-id': galleryID,\n                'mpp-parent-type': parentType,\n\n            }),\n            allowedFileTypes: utils.prepareExtensions(utils.getExtensions('photo')),\n            addRemoveLinks: true,\n            addedfile: function (file) {\n                $coverUploadingIndicator.show();\n                // show loader\n                //file.previewElement = Dropzone.createElement(this.options.previewTemplate);\n                // Now attach this new element some where in your page\n            },\n            thumbnail: function (file, dataUrl) {\n                // display thumbnail.\n                // Display the image in your file.previewElement\n            },\n            uploadprogress: function (file, progress, bytesSent) {\n                // Display the progress\n            },\n            error: function () {\n                mpp.notify('Error');\n            },\n            events: {\n                success: function (file, response) {\n                    response = response.data;\n                    let url = response.sizes && response.sizes.thumbnail ? response.sizes.thumbnail.url : null;\n                    if (url) {\n                        $editableCover.find('.mpp-cover-image').attr('src', url);\n                    }\n\n                },\n                complete: function () {\n                    // hide Loader.\n                    $coverUploadingIndicator.hide();\n                }\n            }\n        });\n        // initialize.\n        coverUploader.init();\n\n        // disable event propagation.\n        $(document).on('click', '#mpp-cover-upload', function () {\n            return false;\n        });\n    });\n})(jQuery);"],"names":["module","exports","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","$","uploadSettings","_","clone","_mppUploadSettings","uploadFeedbackStrings","_mppUploaderFeedbackL10n","document","ready","utils","mpp","mediaUtils","context","params","gallery_id","length","val","extensions","getExtensions","current_type","uploader","Uploader","el","url","l10n","extend","allowedFileTypes","prepareExtensions","addRemoveLinks","init","setupUploaderFileTypes","shortcode_gallery_id","shortcodeExtensions","first","shortcodeUploader","disable","hideHelpMessages","$type","parents","find","refresh","on","$this","this","$option","enable","setParam","data","$editableCover","$coverUploadingIndicator","galleryID","parentID","parentType","clickable","addedfile","file","show","thumbnail","dataUrl","uploadprogress","progress","bytesSent","error","notify","events","success","response","sizes","attr","complete","hide","jQuery"],"sourceRoot":""}